/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#include<bits/stdc++.h>
class Solution {
public :
    int fun(TreeNode* root, int& dia){
         if(root==NULL){
            return 0;
        }
        int lh = fun(root->left,dia);
        int rh = fun(root->right,dia);
        dia = max(dia,lh+rh);
        return max(lh,rh)+1;
    }
    int diameterOfBinaryTree(TreeNode* root) {
       int dia=0;
       if(root==NULL) return -1;
       if(root->left==NULL && root->right==NULL) return 0;
       int x = fun(root,dia);
       return dia;
    }
};
